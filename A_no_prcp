{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1FcAQvdiNgy43OLSihD_4FIaPIWAhpRw3","authorship_tag":"ABX9TyNKCDF6uiF2vBekgChulyHW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":8,"metadata":{"id":"GoeUxWK6dr_x","executionInfo":{"status":"ok","timestamp":1725445914131,"user_tz":-330,"elapsed":1641,"user":{"displayName":"JANE","userId":"04368026904399864163"}}},"outputs":[],"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error\n","\n","# Load data\n","data = pd.read_csv('/content/drive/MyDrive/AI ML IITM saasthra/A_noPRCP.csv')\n","test_data = pd.read_csv('/content/drive/MyDrive/AI ML IITM saasthra/A_noPRCP_test.csv')\n","\n","# Extract features and target variable\n","X = data[['LATITUDE_A', 'LONGITUDE_A', 'ELEVATION_A', 'tmax_A', 'tmin_A', 'LONGITUDE', 'LATITUDE', 'ELEVATION']]\n","y = data['TAVG']\n","\n","# Prepare test features (make sure test features match the training features)\n","X_test = test_data[['LATITUDE_A', 'LONGITUDE_A', 'ELEVATION_A', 'tmax_A', 'tmin_A', 'LONGITUDE', 'LATITUDE', 'ELEVATION']]\n","\n","# Split data for training and validation\n","X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize features\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_val_scaled = scaler.transform(X_val)\n","X_test_scaled = scaler.transform(X_test)\n"]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"0CKFx2Jhe9dX","executionInfo":{"status":"ok","timestamp":1725444582983,"user_tz":-330,"elapsed":594,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"798d0a81-c4b1-4cb4-932a-5ad547aa3704"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           DATE  LATITUDE_A  LONGITUDE_A  ELEVATION_A      tmax_A     tmin_A  \\\n","0    1974-08-09       63.88        77.52          128  102.220000  34.100000   \n","1    1974-08-10       63.88        77.52          128   39.361437  19.565787   \n","2    1974-08-11       63.88        77.52          128   34.100000  26.380000   \n","3    1974-10-06       63.88        77.52          128   24.200000   7.000000   \n","4    1975-01-28       63.88        77.52          128   -2.200000  -7.400000   \n","..          ...         ...          ...          ...         ...        ...   \n","807  1980-09-09       63.88        77.52          128   28.321437   8.525787   \n","808  1980-09-14       63.88        77.52          128   53.570000 -24.290000   \n","809  1980-09-15       63.88        77.52          128   30.080000   6.880000   \n","810  1980-09-16       63.88        77.52          128   31.900000  12.260000   \n","811  1980-09-17       63.88        77.52          128   73.150000 -17.230000   \n","\n","     Tavg_A  LONGITUDE  LATITUDE  TAVG  ELEVATION  \n","0     68.16     78.733    63.933  24.7         63  \n","1     29.40     78.733    63.933  24.8         63  \n","2     30.24     78.733    63.933  24.8         63  \n","3     15.60     78.733    63.933  15.7         63  \n","4     -4.80     78.733    63.933  -4.2         63  \n","..      ...        ...       ...   ...        ...  \n","807   18.36     78.733    63.933  18.0         63  \n","808   14.64     78.733    63.933  16.8         63  \n","809   18.48     78.733    63.933  17.3         63  \n","810   22.08     78.733    63.933  20.0         63  \n","811   27.96     78.733    63.933  25.2         63  \n","\n","[812 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-f48e41de-692b-4c0b-a8a7-c8cdecc8f124\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DATE</th>\n","      <th>LATITUDE_A</th>\n","      <th>LONGITUDE_A</th>\n","      <th>ELEVATION_A</th>\n","      <th>tmax_A</th>\n","      <th>tmin_A</th>\n","      <th>Tavg_A</th>\n","      <th>LONGITUDE</th>\n","      <th>LATITUDE</th>\n","      <th>TAVG</th>\n","      <th>ELEVATION</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1974-08-09</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>102.220000</td>\n","      <td>34.100000</td>\n","      <td>68.16</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>24.7</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1974-08-10</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>39.361437</td>\n","      <td>19.565787</td>\n","      <td>29.40</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>24.8</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1974-08-11</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>34.100000</td>\n","      <td>26.380000</td>\n","      <td>30.24</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>24.8</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1974-10-06</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>24.200000</td>\n","      <td>7.000000</td>\n","      <td>15.60</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>15.7</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1975-01-28</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>-2.200000</td>\n","      <td>-7.400000</td>\n","      <td>-4.80</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>-4.2</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>807</th>\n","      <td>1980-09-09</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>28.321437</td>\n","      <td>8.525787</td>\n","      <td>18.36</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>18.0</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>808</th>\n","      <td>1980-09-14</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>53.570000</td>\n","      <td>-24.290000</td>\n","      <td>14.64</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>16.8</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>809</th>\n","      <td>1980-09-15</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>30.080000</td>\n","      <td>6.880000</td>\n","      <td>18.48</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>17.3</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>810</th>\n","      <td>1980-09-16</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>31.900000</td>\n","      <td>12.260000</td>\n","      <td>22.08</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>20.0</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>811</th>\n","      <td>1980-09-17</td>\n","      <td>63.88</td>\n","      <td>77.52</td>\n","      <td>128</td>\n","      <td>73.150000</td>\n","      <td>-17.230000</td>\n","      <td>27.96</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>25.2</td>\n","      <td>63</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>812 rows Ã— 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f48e41de-692b-4c0b-a8a7-c8cdecc8f124')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f48e41de-692b-4c0b-a8a7-c8cdecc8f124 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f48e41de-692b-4c0b-a8a7-c8cdecc8f124');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5f0581b7-8454-4586-96fe-c32f948b474a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f0581b7-8454-4586-96fe-c32f948b474a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5f0581b7-8454-4586-96fe-c32f948b474a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_616539a5-7f91-4367-a669-86d465f1a704\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_616539a5-7f91-4367-a669-86d465f1a704 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 812,\n  \"fields\": [\n    {\n      \"column\": \"DATE\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 812,\n        \"samples\": [\n          \"1977-06-07\",\n          \"1979-04-19\",\n          \"1977-03-01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.109806666095406e-15,\n        \"min\": 63.88,\n        \"max\": 63.88,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4219613332190812e-14,\n        \"min\": 77.52,\n        \"max\": 77.52,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          77.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ELEVATION_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 128,\n        \"max\": 128,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tmax_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.875182648539113,\n        \"min\": -29.24,\n        \"max\": 141.07999999999998,\n        \"num_unique_values\": 356,\n        \"samples\": [\n          24.121436597110755\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tmin_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.78491739347292,\n        \"min\": -55.17,\n        \"max\": 57.48578651685393,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          8.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tavg_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.455281958484974,\n        \"min\": -35.04,\n        \"max\": 83.04,\n        \"num_unique_values\": 536,\n        \"samples\": [\n          79.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8439226664381624e-14,\n        \"min\": 78.733,\n        \"max\": 78.733,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          78.733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.109806666095406e-15,\n        \"min\": 63.933,\n        \"max\": 63.933,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63.933\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TAVG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.549443672364587,\n        \"min\": -28.3,\n        \"max\": 32.7,\n        \"num_unique_values\": 330,\n        \"samples\": [\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ELEVATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 63,\n        \"max\": 63,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"92MiKVGSUOVz","executionInfo":{"status":"ok","timestamp":1725445936152,"user_tz":-330,"elapsed":998,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"7b0e0c4c-9df0-45d5-a7e0-7e1d9246c7b0"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['DATE', 'LATITUDE_A', 'LONGITUDE_A', 'ELEVATION_A', 'tmax_A', 'tmin_A',\n","       'Tavg_A', 'LONGITUDE', 'LATITUDE', 'TAVG', 'ELEVATION'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["test_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Gyn-FIFdUPoH","executionInfo":{"status":"ok","timestamp":1725445938516,"user_tz":-330,"elapsed":1632,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"e81d1631-931a-4a76-fe08-b4fef40538f4"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           DATE  LATITUDE_A  LONGITUDE_A  ELEVATION_A     tmax_A     tmin_A  \\\n","0    1975-06-08      63.883       77.517          128  34.133117  21.242208   \n","1    1975-07-12      63.883       77.517          128  36.000000  25.000000   \n","2    1975-07-18      63.883       77.517          128  42.600000  21.000000   \n","3    1975-07-30      63.883       77.517          128  38.000000  22.000000   \n","4    1975-08-05      63.883       77.517          128  36.133117  23.242208   \n","..          ...         ...          ...          ...        ...        ...   \n","198  1980-07-24      63.883       77.517          128  34.000000  20.000000   \n","199  1980-08-06      63.883       77.517          128  31.633117  18.742208   \n","200  1980-08-14      63.883       77.517          128  33.400000  17.000000   \n","201  1980-08-30      63.883       77.517          128  20.000000   8.000000   \n","202  1980-09-02      63.883       77.517          128  29.000000  10.000000   \n","\n","     Tavg_A  LONGITUDE  LATITUDE  ELEVATION  \n","0      27.5     78.733    63.933         63  \n","1      30.5     78.733    63.933         63  \n","2      31.8     78.733    63.933         63  \n","3      30.0     78.733    63.933         63  \n","4      29.5     78.733    63.933         63  \n","..      ...        ...       ...        ...  \n","198    27.0     78.733    63.933         63  \n","199    25.0     78.733    63.933         63  \n","200    25.2     78.733    63.933         63  \n","201    14.0     78.733    63.933         63  \n","202    19.5     78.733    63.933         63  \n","\n","[203 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-0d0e93a0-508a-4ed3-872a-3fd3965bef16\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DATE</th>\n","      <th>LATITUDE_A</th>\n","      <th>LONGITUDE_A</th>\n","      <th>ELEVATION_A</th>\n","      <th>tmax_A</th>\n","      <th>tmin_A</th>\n","      <th>Tavg_A</th>\n","      <th>LONGITUDE</th>\n","      <th>LATITUDE</th>\n","      <th>ELEVATION</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1975-06-08</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>34.133117</td>\n","      <td>21.242208</td>\n","      <td>27.5</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1975-07-12</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>36.000000</td>\n","      <td>25.000000</td>\n","      <td>30.5</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1975-07-18</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>42.600000</td>\n","      <td>21.000000</td>\n","      <td>31.8</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1975-07-30</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>38.000000</td>\n","      <td>22.000000</td>\n","      <td>30.0</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1975-08-05</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>36.133117</td>\n","      <td>23.242208</td>\n","      <td>29.5</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>1980-07-24</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>34.000000</td>\n","      <td>20.000000</td>\n","      <td>27.0</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>1980-08-06</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>31.633117</td>\n","      <td>18.742208</td>\n","      <td>25.0</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>1980-08-14</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>33.400000</td>\n","      <td>17.000000</td>\n","      <td>25.2</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>1980-08-30</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>20.000000</td>\n","      <td>8.000000</td>\n","      <td>14.0</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>1980-09-02</td>\n","      <td>63.883</td>\n","      <td>77.517</td>\n","      <td>128</td>\n","      <td>29.000000</td>\n","      <td>10.000000</td>\n","      <td>19.5</td>\n","      <td>78.733</td>\n","      <td>63.933</td>\n","      <td>63</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>203 rows Ã— 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d0e93a0-508a-4ed3-872a-3fd3965bef16')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d0e93a0-508a-4ed3-872a-3fd3965bef16 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d0e93a0-508a-4ed3-872a-3fd3965bef16');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3b8bb279-585f-4e1c-9dd7-92ef35933a96\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b8bb279-585f-4e1c-9dd7-92ef35933a96')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3b8bb279-585f-4e1c-9dd7-92ef35933a96 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7c4ff2b9-d023-4d6d-94fd-d365764f8617\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7c4ff2b9-d023-4d6d-94fd-d365764f8617 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_data","summary":"{\n  \"name\": \"test_data\",\n  \"rows\": 203,\n  \"fields\": [\n    {\n      \"column\": \"DATE\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 203,\n        \"samples\": [\n          \"1976-03-17\",\n          \"1975-12-14\",\n          \"1978-10-29\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.122993335847761e-15,\n        \"min\": 63.883,\n        \"max\": 63.883,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63.883\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4245986671695522e-14,\n        \"min\": 77.517,\n        \"max\": 77.517,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          77.517\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ELEVATION_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 128,\n        \"max\": 128,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tmax_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.716432953357796,\n        \"min\": -16.0,\n        \"max\": 43.0,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tmin_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.661018587378946,\n        \"min\": -27.8,\n        \"max\": 28.0,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          0.3999999999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tavg_A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.509609066916267,\n        \"min\": -21.4,\n        \"max\": 35.0,\n        \"num_unique_values\": 146,\n        \"samples\": [\n          14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4245986671695522e-14,\n        \"min\": 78.733,\n        \"max\": 78.733,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          78.733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.122993335847761e-15,\n        \"min\": 63.933,\n        \"max\": 63.933,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63.933\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ELEVATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 63,\n        \"max\": 63,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["Linear Regression"],"metadata":{"id":"QLC-ggtweYiY"}},{"cell_type":"code","source":["# Initialize and train the model\n","lr = LinearRegression()\n","lr.fit(X_train_scaled, y_train)\n","\n","# Predict on validation and test datasets\n","y_val_pred = lr.predict(X_val_scaled)\n","y_test_pred = lr.predict(X_test_scaled)\n","\n","# Calculate MAE\n","mae_lr = mean_absolute_error(y_val, y_val_pred)\n","print(f\"Linear Regression Mean Absolute Error: {mae_lr}\")\n","\n","# Prepare results for test data\n","test_data['Predicted_TAVG'] = y_test_pred"],"metadata":{"id":"r-xEGB3meTyt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725446083762,"user_tz":-330,"elapsed":857,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"36f5280f-622b-4257-f0c3-203c6c796970"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Linear Regression Mean Absolute Error: 5.065058340028666\n"]}]},{"cell_type":"code","source":["y_test_pred_rounded = [round(pred, 1) for pred in y_test_pred]\n","\n","# Save predictions to CSV\n","predictions = pd.DataFrame({\n","    'INDEX': range(len(y_test_pred_rounded)),\n","    'TAVG': y_test_pred_rounded\n","})\n","\n","predictions.to_csv('/content/drive/MyDrive/AIML PREDICTIONS/A_noPRCP_test_predictions_lr.csv', index=False)"],"metadata":{"id":"yg75XOsWhHzR","executionInfo":{"status":"ok","timestamp":1725446196595,"user_tz":-330,"elapsed":711,"user":{"displayName":"JANE","userId":"04368026904399864163"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["Support Vector Machine"],"metadata":{"id":"dPiil1YIec8G"}},{"cell_type":"code","source":["from sklearn.svm import SVR\n","from sklearn.metrics import mean_absolute_error\n","import pandas as pd\n","\n","# Initialize and train the SVR model\n","svr = SVR()\n","svr.fit(X_train_scaled, y_train)\n","\n","# Predict on validation and test datasets\n","y_val_pred_svr = svr.predict(X_val_scaled)\n","y_test_pred_svr = svr.predict(X_test_scaled)\n","\n","# Calculate MAE\n","mae_svr = mean_absolute_error(y_val, y_val_pred_svr)\n","print(f\"Support Vector Machine Mean Absolute Error: {mae_svr}\")\n","\n","# Round predictions to one decimal place\n","y_test_pred_svr_rounded = [round(pred, 1) for pred in y_test_pred_svr]\n","\n","# Prepare results for test data\n","predictions = pd.DataFrame({\n","    'INDEX': range(len(y_test_pred_svr_rounded)),\n","    'TAVG': y_test_pred_svr_rounded\n","})\n","\n","# Save predictions to CSV\n","predictions.to_csv('/content/drive/MyDrive/AIML PREDICTIONS/A_noPRCP_test_predictions_svr.csv', index=False)\n"],"metadata":{"id":"LtLQvx6Uea04","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725446405098,"user_tz":-330,"elapsed":737,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"234c4b02-f52e-4257-d5cb-86b5e8fd4e8e"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Support Vector Machine Mean Absolute Error: 3.9341083917266224\n"]}]},{"cell_type":"markdown","source":["K nearest Neighbours"],"metadata":{"id":"q3WojhTrehI-"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.metrics import mean_absolute_error\n","import pandas as pd\n","\n","# Initialize and train the KNN model\n","knn = KNeighborsRegressor()\n","knn.fit(X_train_scaled, y_train)\n","\n","# Predict on validation and test datasets\n","y_val_pred_knn = knn.predict(X_val_scaled)\n","y_test_pred_knn = knn.predict(X_test_scaled)\n","\n","# Calculate MAE for validation data\n","mae_knn = mean_absolute_error(y_val, y_val_pred_knn)\n","print(f\"K-Nearest Neighbors Mean Absolute Error: {mae_knn}\")\n","\n","# Round predictions to one decimal place\n","y_test_pred_knn_rounded = [round(pred, 1) for pred in y_test_pred_knn]\n","\n","# Prepare results for test data\n","predictions = pd.DataFrame({\n","    'INDEX': range(len(y_test_pred_knn_rounded)),\n","    'TAVG': y_test_pred_knn_rounded\n","})\n","\n","# Save predictions to CSV\n","predictions.to_csv('/content/drive/MyDrive/AIML PREDICTIONS/A_noPRCP_test_predictions_knn.csv', index=False)\n","\n"],"metadata":{"id":"JKbWTXNAefkZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725446454965,"user_tz":-330,"elapsed":720,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"0dbe520b-93cd-4bf5-e554-d486b3e1778f"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["K-Nearest Neighbors Mean Absolute Error: 3.756687116564418\n"]}]},{"cell_type":"markdown","source":["DT"],"metadata":{"id":"_eaF1Rl6emEN"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeRegressor\n","from sklearn.metrics import mean_absolute_error\n","import pandas as pd\n","\n","# Initialize and train the Decision Tree model\n","dt = DecisionTreeRegressor()\n","dt.fit(X_train_scaled, y_train)\n","\n","# Predict on validation and test datasets\n","y_val_pred_dt = dt.predict(X_val_scaled)\n","y_test_pred_dt = dt.predict(X_test_scaled)\n","\n","# Calculate MAE for validation data\n","mae_dt = mean_absolute_error(y_val, y_val_pred_dt)\n","print(f\"Decision Tree Mean Absolute Error: {mae_dt}\")\n","\n","# Round predictions to one decimal place\n","y_test_pred_dt_rounded = [round(pred, 1) for pred in y_test_pred_dt]\n","\n","# Prepare results for test data\n","predictions = pd.DataFrame({\n","    'INDEX': range(len(y_test_pred_dt_rounded)),\n","    'TAVG': y_test_pred_dt_rounded\n","})\n","\n","# Save predictions to CSV\n","predictions.to_csv('/content/drive/MyDrive/AIML PREDICTIONS/A_noPRCP_test_predictions_dt.csv', index=False)\n"],"metadata":{"id":"yjvKFjOTenG_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725446503255,"user_tz":-330,"elapsed":580,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"c9088ade-991f-4b6d-af49-2c14f233346f"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Decision Tree Mean Absolute Error: 4.530981595092025\n"]}]},{"cell_type":"markdown","source":["Grdaient Boosting"],"metadata":{"id":"XuB9BtCSgxF9"}},{"cell_type":"code","source":["from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.metrics import mean_absolute_error\n","import pandas as pd\n","\n","# Initialize and train the Gradient Boosting model\n","model = GradientBoostingRegressor()\n","model.fit(X_train_scaled, y_train)\n","\n","# Predict on validation data\n","y_val_pred = model.predict(X_val_scaled)\n","mae_val = mean_absolute_error(y_val, y_val_pred)\n","print(f\"Gradient Boosting Model Mean Absolute Error on Validation Set: {mae_val}\")\n","\n","# Predict on test data\n","y_test_pred = model.predict(X_test_scaled)\n","\n","# Round predictions to one decimal place\n","y_test_pred_rounded = [round(pred, 1) for pred in y_test_pred]\n","\n","# Prepare results for test data\n","predictions = pd.DataFrame({\n","    'INDEX': range(len(y_test_pred_rounded)),\n","    'TAVG': y_test_pred_rounded\n","})\n","\n","# Save predictions to CSV\n","predictions.to_csv('/content/drive/MyDrive/AIML PREDICTIONS/A_noPRCP_test_predictions_gb.csv', index=False)\n","\n"],"metadata":{"id":"lpKuNku2fOaG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725446537803,"user_tz":-330,"elapsed":566,"user":{"displayName":"JANE","userId":"04368026904399864163"}},"outputId":"e639b362-4e52-4342-ec49-c7fb0ec3cf17"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Gradient Boosting Model Mean Absolute Error on Validation Set: 3.3065904258292718\n"]}]}]}